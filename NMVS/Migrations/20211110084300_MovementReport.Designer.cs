// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NMVS.Models;

namespace NMVS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211110084300_MovementReport")]
    partial class MovementReport
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("NMVS.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("NMVS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("NMVS.Models.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.AllocateOrder", b =>
                {
                    b.Property<int>("AlcOrdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlcOrdFDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlcOrdFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AlcOrdQty")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CompletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Confirm")
                        .HasColumnType("bit");

                    b.Property<string>("ConfirmedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MovedQty")
                        .HasColumnType("float");

                    b.Property<string>("MovementNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MovementTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PtId")
                        .HasColumnType("int");

                    b.Property<double>("Reported")
                        .HasColumnType("float");

                    b.Property<int>("RequestID")
                        .HasColumnType("int");

                    b.HasKey("AlcOrdId");

                    b.HasIndex("LocCode1");

                    b.ToTable("AllocateOrders");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.AllocateRequest", b =>
                {
                    b.Property<int>("AlcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlcCmmt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlcFrom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AlcFromDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AlcQty")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CompletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemMasterPtId")
                        .HasColumnType("int");

                    b.Property<string>("LocCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("MovementTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PtId")
                        .HasColumnType("int");

                    b.Property<double>("Reported")
                        .HasColumnType("float");

                    b.HasKey("AlcId");

                    b.HasIndex("ItemMasterPtId");

                    b.HasIndex("LocCode1");

                    b.ToTable("AllocateRequests");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Customer", b =>
                {
                    b.Property<string>("CustCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Addr")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AgentNo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ApCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ctry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustCode");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.GeneralizedCode", b =>
                {
                    b.Property<int>("CodeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeFldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeNo");

                    b.ToTable("GeneralizedCodes");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.IncomingList", b =>
                {
                    b.Property<int>("IcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Checked")
                        .HasColumnType("int");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Driver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRecycle")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWarranty")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Po")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PtNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecycleId")
                        .HasColumnType("int");

                    b.Property<string>("SupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierSupCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vehicle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IcId");

                    b.HasIndex("SupplierSupCode");

                    b.ToTable("IncomingLists");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.InvRequest", b =>
                {
                    b.Property<string>("RqID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<string>("ConfirmationNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ConfirmedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reported")
                        .HasColumnType("bit");

                    b.Property<string>("ReportedNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RqBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RqCmt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RqDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RqType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoConfirm")
                        .HasColumnType("bit");

                    b.HasKey("RqID");

                    b.ToTable("InvRequests");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.InventoryTransac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAllocate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisposed")
                        .HasColumnType("bit");

                    b.Property<int>("LastId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MovementTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NewId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InventoryTransacs");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.IssueOrder", b =>
                {
                    b.Property<int>("ExpOrdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Confirm")
                        .HasColumnType("bit");

                    b.Property<string>("ConfirmedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetId")
                        .HasColumnType("int");

                    b.Property<double>("ExpOrdQty")
                        .HasColumnType("float");

                    b.Property<string>("FromLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueToDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MovedQty")
                        .HasColumnType("float");

                    b.Property<DateTime>("MovementTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PtId")
                        .HasColumnType("int");

                    b.Property<double>("Reported")
                        .HasColumnType("float");

                    b.Property<string>("RqID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToVehicle")
                        .HasColumnType("int");

                    b.HasKey("ExpOrdId");

                    b.ToTable("IssueOrders");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.ItemData", b =>
                {
                    b.Property<string>("ItemNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Flammable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemPkg")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("ItemPkgQty")
                        .HasColumnType("float");

                    b.Property<string>("ItemType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemUm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("ItemWhUnit")
                        .HasColumnType("float");

                    b.HasKey("ItemNo");

                    b.ToTable("ItemDatas");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.ItemMaster", b =>
                {
                    b.Property<int>("PtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Accepted")
                        .HasColumnType("float");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IcId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsRecycled")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovementNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("PtCmt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PtDateIn")
                        .HasColumnType("datetime2");

                    b.Property<double>("PtHold")
                        .HasColumnType("float");

                    b.Property<string>("PtLotNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("PtQty")
                        .HasColumnType("float");

                    b.Property<string>("Qc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RecQty")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RecycleDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RefDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierSupCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UnqualifiedId")
                        .HasColumnType("int");

                    b.HasKey("PtId");

                    b.HasIndex("IcId");

                    b.HasIndex("SupplierSupCode");

                    b.ToTable("ItemMasters");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Loc", b =>
                {
                    b.Property<string>("LocCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Direct")
                        .HasColumnType("bit");

                    b.Property<bool>("Flammable")
                        .HasColumnType("bit");

                    b.Property<double>("LocCap")
                        .HasColumnType("float");

                    b.Property<string>("LocCmmt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LocDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("LocHolding")
                        .HasColumnType("float");

                    b.Property<double>("LocOutgo")
                        .HasColumnType("float");

                    b.Property<double>("LocRemain")
                        .HasColumnType("float");

                    b.Property<bool>("LocStatus")
                        .HasColumnType("bit");

                    b.Property<string>("LocType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseWhCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WhCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocCode");

                    b.HasIndex("WarehouseWhCode");

                    b.ToTable("Locs");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.MfgIssueNote", b =>
                {
                    b.Property<int>("IsNId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IssuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssuedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RqId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IsNId");

                    b.ToTable("MfgIssueNotes");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.MfgIssueNoteDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsNId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PtId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("IssueNoteDets");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.ProdLine", b =>
                {
                    b.Property<string>("PrLnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("SiCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSiCode")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PrLnId");

                    b.HasIndex("SiteSiCode");

                    b.ToTable("ProdLines");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.RequestDet", b =>
                {
                    b.Property<int>("DetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Arranged")
                        .HasColumnType("float");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Issued")
                        .HasColumnType("float");

                    b.Property<string>("ItemNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MovementNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Picked")
                        .HasColumnType("float");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("Ready")
                        .HasColumnType("float");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequireDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("RqID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Shipped")
                        .HasColumnType("bit");

                    b.Property<int?>("SodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SpecDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DetId");

                    b.ToTable("RequestDets");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.SalesOrder", b =>
                {
                    b.Property<string>("SoNbr")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Confirm")
                        .HasColumnType("bit");

                    b.Property<string>("ConfirmBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerCustCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReqDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ReqReported")
                        .HasColumnType("bit");

                    b.Property<string>("ReqReportedNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequestConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RequestConfirmedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipVia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoCurr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Warning")
                        .HasColumnType("bit");

                    b.HasKey("SoNbr");

                    b.HasIndex("CustomerCustCode");

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Shipper", b =>
                {
                    b.Property<int>("ShpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckInBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOutBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Driver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IssueConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueConfirmedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Loc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShpDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShpTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShpVia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShpId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.ShipperDet", b =>
                {
                    b.Property<int>("SpDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DetId")
                        .HasColumnType("int");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("RqId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToAddr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShpId")
                        .HasColumnType("int");

                    b.Property<string>("SoldTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpDetId");

                    b.ToTable("ShipperDets");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Site", b =>
                {
                    b.Property<string>("SiCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("SiCmmt")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SiName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SiCode");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.SoDetail", b =>
                {
                    b.Property<int>("SodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ItemNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NetPrice")
                        .HasColumnType("float");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RequiredDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("RqDetId")
                        .HasColumnType("int");

                    b.Property<string>("SalesOrderSoNbr")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Shipped")
                        .HasColumnType("float");

                    b.Property<string>("SoNbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SpecDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.HasKey("SodId");

                    b.HasIndex("SalesOrderSoNbr");

                    b.ToTable("SoDetails");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Supplier", b =>
                {
                    b.Property<string>("SupCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Addr")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ctry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupCode");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Unqualified", b =>
                {
                    b.Property<int>("UqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DisposedQty")
                        .HasColumnType("float");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PtId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("RecycleQty")
                        .HasColumnType("float");

                    b.HasKey("UqId");

                    b.ToTable("Unqualifieds");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.UnqualifiedTransac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDisposed")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransantionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnqId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UnqualifiedTransacs");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.UploadError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UploadErrors");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.UploadReport", b =>
                {
                    b.Property<string>("UploadId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Errors")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Inserted")
                        .HasColumnType("int");

                    b.Property<int>("TotalRecord")
                        .HasColumnType("int");

                    b.Property<int>("Updated")
                        .HasColumnType("int");

                    b.Property<string>("UploadBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UploadId");

                    b.ToTable("UploadReports");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Warehouse", b =>
                {
                    b.Property<string>("WhCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SiCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSiCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhCmmt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WhDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("WhStatus")
                        .HasColumnType("bit");

                    b.HasKey("WhCode");

                    b.HasIndex("SiteSiCode");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.WoBill", b =>
                {
                    b.Property<int>("WoBillNbr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ComQty")
                        .HasColumnType("float");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrdDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OrdQty")
                        .HasColumnType("float");

                    b.Property<string>("Reporter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WoNbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrderWoNbr")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("WoBillNbr");

                    b.HasIndex("WorkOrderWoNbr");

                    b.ToTable("WoBills");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.WorkOrder", b =>
                {
                    b.Property<string>("WoNbr")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemDataItemNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrLnId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdLinePrLnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("QtyCom")
                        .HasColumnType("float");

                    b.Property<double>("QtyOrd")
                        .HasColumnType("float");

                    b.Property<string>("SoNbr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WoNbr");

                    b.HasIndex("ItemDataItemNo");

                    b.HasIndex("ProdLinePrLnId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("NMVS.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NMVS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NMVS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NMVS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NMVS.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("NMVS.Models.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NMVS.Models.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.AllocateOrder", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.Loc", "Loc")
                        .WithMany()
                        .HasForeignKey("LocCode1");

                    b.Navigation("Loc");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.AllocateRequest", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.ItemMaster", "ItemMaster")
                        .WithMany()
                        .HasForeignKey("ItemMasterPtId");

                    b.HasOne("NMVS.Models.DbModels.Loc", "Loc")
                        .WithMany()
                        .HasForeignKey("LocCode1");

                    b.Navigation("ItemMaster");

                    b.Navigation("Loc");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.IncomingList", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierSupCode");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.ItemMaster", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.IncomingList", "Ic")
                        .WithMany("ItemMasters")
                        .HasForeignKey("IcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NMVS.Models.DbModels.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierSupCode");

                    b.Navigation("Ic");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Loc", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseWhCode");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.ProdLine", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteSiCode");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.SalesOrder", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerCustCode");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.SoDetail", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.SalesOrder", "SalesOrder")
                        .WithMany("SoDets")
                        .HasForeignKey("SalesOrderSoNbr");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Warehouse", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.Site", "Site")
                        .WithMany("Warehouses")
                        .HasForeignKey("SiteSiCode");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.WoBill", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("WorkOrderWoNbr");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.WorkOrder", b =>
                {
                    b.HasOne("NMVS.Models.DbModels.ItemData", "ItemData")
                        .WithMany("WorkOrders")
                        .HasForeignKey("ItemDataItemNo");

                    b.HasOne("NMVS.Models.DbModels.ProdLine", "ProdLine")
                        .WithMany()
                        .HasForeignKey("ProdLinePrLnId");

                    b.Navigation("ItemData");

                    b.Navigation("ProdLine");
                });

            modelBuilder.Entity("NMVS.Models.ApplicationRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("NMVS.Models.ApplicationUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.IncomingList", b =>
                {
                    b.Navigation("ItemMasters");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.ItemData", b =>
                {
                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.SalesOrder", b =>
                {
                    b.Navigation("SoDets");
                });

            modelBuilder.Entity("NMVS.Models.DbModels.Site", b =>
                {
                    b.Navigation("Warehouses");
                });
#pragma warning restore 612, 618
        }
    }
}
