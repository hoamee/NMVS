@model NMVS.Models.ViewModels.SoDetailVm

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <!-- Card header -->
            <div class="card-header">
                <h3 class="mb-0">@ViewData["Title"]</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <hr />
                        <dl class="row">
                            <dt class="col-sm-2">
                                Sold-to
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.CustCode)
                            </dd>
                            <dt class="col-sm-2">
                                Ship-to
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.ShipTo)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.OrdDate)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.OrdDate)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.ReqDate)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.ReqDate)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.DueDate)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.DueDate)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.PriceDate)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.PriceDate)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.SoCurr)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.SoCurr)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.ShipVia)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.ShipVia)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.Comment)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.Comment)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.Confirm)
                            </dt>
                            <dd class="col-sm-10">

                                @if (Model.SoVm.Confirm == true)
                                {
                                    <span class="badge bg-success">Yes</span>
                                }
                                else
                                {
                                    if (Model.SoVm.Confirm == null)
                                    {


                                        <span class="badge bg-secondary">Not yet</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Denied</span>
                                    }
                                }

                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.ConfirmBy)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.ConfirmBy)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.UpdatedBy)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.UpdatedBy)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.SoVm.UpdatedOn)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.SoVm.UpdatedOn)
                            </dd>
                            <dt class="col-sm-2">
                                Warehouse confirmation
                            </dt>
                            <dd class="col-sm-10">
                                @if (Model.SoVm.WhConfirmed == true)
                                {
                                    <span class="badge bg-success">Confirmed</span> <span>By @Model.SoVm.WhConfirmedBy</span>
                                }
                                else if (Model.SoVm.WhConfirmed == null)
                                {
                                    <span class="badge bg-secondary">Not yet</span>
                                }
                                else if (Model.SoVm.WhConfirmed == false)
                                {
                                    <span class="badge bg-danger">Rejected</span>
                                    <span class="text-danger">By @Model.SoVm.WhConfirmedBy: @Model.SoVm.ConfirmationNote</span>
                                }
                            </dd>
                        </dl>
                    </div>
                    <div>
                        <a asp-action="Browse" class="btn btn-secondary">Back to List</a>
                        @if (Model.SoVm.Confirm != true)
                        {
                            <span>| </span><a asp-action="Update" asp-route-id="@Model.SoVm.SoNbr" class="btn btn-outline-warning">Update</a>
                            @if (Model.SoDets.Count > 0 && User.IsInRole("Approve SO") && Model.SoVm.Closed)
                            {
                                <span>|</span> <span id="btn-approve" class="btn btn-success">Approve</span>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <!-- Card header -->
            <div class="card-header">
                <h3 class="mb-0">@ViewData["Title"]</h3>
            </div>
            <div class="card-body">
                <table class="table table-bordered" id="dt-table">
                    <thead>
                        <tr>
                            <th>
                                Item No
                            </th>
                            <th>
                                Date in
                            </th>
                            <th>
                                Quantity
                            </th>
                            <th>
                                Discount
                            </th>
                            <th>
                                Net price
                            </th>
                            <th>
                                Tax
                            </th>
                            <th>
                                Total
                            </th>
                            <th>
                                Shipped
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.SoDets)
                        {
                            <tr>
                                <td>
                                    @if (Model.SoVm.Confirm == true)
                                    {
                                        @item.ItemNo
                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-primary btn-sm" href="/SalesOrders/UpdateSodet/@item.SodId">@item.ItemNo</a>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(f => item.SpecDate)
                                </td>
                                <td>
                                    @item.Quantity
                                </td>
                                <td>
                                    @item.Discount
                                </td>
                                <td>
                                    @item.NetPrice
                                </td>
                                <td>
                                    @item.Tax
                                </td>
                                <td>
                                </td>
                                <td>@item.Shipped</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="6" class="text-center"><b>Total</b></td>
                            <td>
                                @Model.SoVm.SoCurr
                            </td>
                        </tr>
                        @if (!Model.SoVm.Closed)
                        {
                            <tr class="hide-print">
                                <td colspan="10" class="text-center col-6">

                                    <a class="btn btn-outline-info" href="/SalesOrders/SoDetCreate/@Model.SoVm.SoNbr">
                                        <span><i class="fa fa-plus-circle"></i></span>
                                        <span>
                                            Add line
                                        </span>
                                    </a>
                                    <span class="btn btn-outline-success" onclick="submitSo()">
                                        <span><i class="fa fa-check-circle"></i></span>
                                        <span>
                                            Close and submit
                                        </span>
                                    </span>

                                </td>
                            </tr>
                        }
                    </tfoot>
                </table>

            </div>
        </div>
    </div>
</div>


<script src="~/assets/js/sweetalert/sweetalert2.all.min.js"></script>
<script src="~/assets/js/bootbox/bootbox.min.js"></script>
<script src="~/assets/datatable/datatables.min.js"></script>
<script>
    var routeURL = location.protocol + "//" + location.host;
    function submitSo() {
        Swal.fire({
                title: 'Is all information correct?',
                showDenyButton: true,
                confirmButtonText: 'Yes, submit',
                denyButtonText: `No`,
                showLoaderOnConfirm: true,
                preConfirm: () => {
                    var rowCount = $('#dt-table > tbody  > tr').length;
                    if (rowCount <= 0) {
                        Swal.showValidationMessage(
                            `There's no data to submit`
                        )
                    }
                    return true;


                },
                allowOutsideClick: () => !Swal.isLoading()

            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.value == true) {

                    $.ajax({
                        method: 'GET',
                        url: routeURL + '/api/So/SoSubmit/@Model.SoVm.SoNbr',
                        success: function (dt) {
                            Swal.fire('Saved!', '', 'success')
                                .then((r) => {
                                    if (r.isConfirmed) {
                                        window.location.reload();
                                    }
                                });
                        }

                    });

                }
            })
    }

    $(document).ready(function () {
        $('.nav-sale').addClass('active');
        $('#datatable-search').DataTable();

        $('#btn-approve').click(function () {

            Swal.fire({
                title: 'Are you sure approve this SO?',
                showDenyButton: true,
                confirmButtonText: 'Yes, submit',
                denyButtonText: `No`,
                showLoaderOnConfirm: true,

            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {

                    if (result) {
                        $.ajax({
                            method: 'GET',
                            url: routeURL + '/api/So/SoConfirm/@Model.SoVm.SoNbr',
                            success: function () {
                                window.location.href = window.location.href;
                            }
                        });

                    }

                }
            })



        });
    });
</script>
