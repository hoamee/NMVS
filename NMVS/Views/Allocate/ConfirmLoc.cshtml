@model IEnumerable<NMVS.Models.ViewModels.LocationCapSelect>
@{
    ViewData["Title"] = "Pick list";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/assets/js/notify.js"></script>
<script src="~/assets/js/sweetalert/sweetalert2.all.min.js"></script>
<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <!-- Card header -->
            <div class="card-header">
                <h3 class="mb-0">@ViewData["Title"]</h3>
            </div>
            <div class="card">
                <div class="card-body px-3 py-4-5">

                    <div class="row col-12">
                        <h4 class="col-auto">
                            Quantity:
                        </h4>
                        <h4 class="col-auto" id="init-quantity">
                            @ViewBag.qty
                        </h4>
                        <button class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#history-modal">
                            Show history
                        </button>
                    </div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    Loc code
                                </th>
                                <th>
                                    Loc
                                </th>
                                <th>
                                    Remaining capacity
                                </th>
                                <th>
                                    Holding
                                </th>
                                <th>
                                    Frammable
                                </th>
                                <th>Quantity</th>
                                <th>

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr id="o-@item.LcpId">
                                    <td class="td-id">
                                        @Html.DisplayFor(modelItem => item.LcpId)
                                    </td>
                                    <td class="td-name">
                                        @Html.DisplayFor(modelItem => item.LcName)
                                    </td>
                                    <td class="remain-cap">
                                        @Html.DisplayFor(modelItem => item.RemainCapacity)
                                    </td>
                                    <td class="td-hold">
                                        @Html.DisplayFor(modelItem => item.Holding)
                                    </td>
                                    <td>
                                        @if (item.Framable)
                                        {


                                            <span class="fa fa-fire-alt fa-2x" style="color: red;"></span>

                                        }
                                        else
                                        {
                                            <span class="badge bg-success">No</span>
                                        }
                                    </td>
                                    <td class="td-input">
                                        @{ var maxVal = item.RemainCapacity - item.Holding;}
                                        <input type="number" class="form-control val-input" step="0.01" max="@maxVal" min="0" />
                                    </td>
                                    <td>
                                        <input type="button" class="btn btn-sm btn-success add-btn" value="Add" />

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="row mt-4">
    <div class="col-6">
        <div class="card">
            <!-- Card header -->
            <div class="card-header">
                <h3 class="mb-0">Pick list</h3>
            </div>
            <div class="card-body">
                <div class="row col-12">
                    <h4 class="col-auto">
                        Quantity:
                    </h4>
                    <h4 class="col-auto" id="selected-qty">
                        0
                    </h4>
                </div>

                <div id="inv">
                    <table class="table" id="selected-table">
                        <thead>
                            <tr>
                                <th>
                                    Location Code
                                </th>
                                <th>
                                    Location Name
                                </th>
                                <th>
                                    Quantity
                                </th>
                                <th>

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>

                    </table>
                </div>
                <label for="req-time" class="form-label">Time</label>
                <input type="datetime-local" id="req-time" class="form-control" />
                <div class="d-flex flex-row-reverse bd-highlight">

                    <div class="p-2 bd-highlight">
                        <button class="btn btn-info" id="submit-btn">
                            Submit
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function removeRow(loc, tr, qty) {

        Swal.fire({
            title: 'Are you sure want to remove this row?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: 'Yes',
            denyButtonText: `No`,
        }).then((result) => {
            if (result) {
                var vSelectQty = parseFloat($("#selected-qty").html()) - qty;
                var vInitQty = parseFloat($('#init-quantity').html()) + qty;
                var vHold = parseFloat($("#" + loc).children(".td-hold").html()) - qty;

                $("#" + loc).closest('tr').children('.td-hold').html(vHold);
                $('#init-quantity').html(vInitQty);
                $("#selected-qty").html(vSelectQty);
                $('#' + tr).remove();
            } else if (result.isDenied) {
                Swal.fire('Changes are not saved', '', 'info')
            }

        });

        


    }

    function go2(data) { $(data).delay(100).fadeOut().fadeIn('slow') };

    $(document).ready(function () {
        var jsArr = new Array();

        $('#submit-btn').click(function () {
            var rqTime = $('#req-time').val();
            if (rqTime == "") {
                $("#req-time").notify("Please pick a time for movement");;
            } else {
                $('#update-modal').html($('#inv').html());
                $('#exampleModal').modal('toggle');
            }
        });

        $('.add-btn').click(function () {
            //get remaining & qty
            var selectQty = parseFloat($("#selected-qty").html());
            var initQty = parseFloat($('#init-quantity').html());
            var tempInitQty = initQty;
            var remain = parseFloat($(this).closest('tr').children('.remain-cap').text());
            var input = parseFloat($(this).closest('tr').children('.td-input').children('.val-input').val());
            var vHold = parseFloat($(this).closest('tr').children('.td-hold').text());
            var acceptedInput = remain - vHold;

            if (isNaN(input)) {
                alert("Cannot add value NaN to cart");
                $(this).closest('tr').children('.td-input').children('.val-input').val('');
            } else {
                if (input > acceptedInput || tempInitQty < input) {

                    alert("Your input is to large!");
                    $(this).closest('tr').children('.td-input').children('.val-input').val('');
                }
                else {
                    if (input <= 0) {
                        alert("Please input quantity greater than \"0\"");
                    }
                    else {
                        tempInitQty = tempInitQty - input;
                        selectQty += input;

                        //Change value
                        $('#init-quantity').html(tempInitQty);
                        $("#selected-qty").html(selectQty);
                        $(this).closest('tr').children('.td-hold').text(vHold + input);
                        $(this).closest('tr').children('.td-input').children('.val-input').val('');

                        //get loc id & name
                        var fName = $(this).closest('tr').children('.td-name').text().trim();
                        var fid = $(this).closest('tr').children('.td-id').text().trim();

                        //check if target table exist id
                        if ($('#' + fid).length) {
                            var tarQty = parseFloat($('#' + fid).text());
                            tarQty += input;
                            $('#tr-' + fid).remove();
                            $('#selected-table > tbody:last').append(`<tr id="tr-${fid}"><td class="whl-code">${fid}</td><td>${fName}</td><td class="qty" id="${fid}">${tarQty}</td><td> <a class="btn btn-sm btn-outline-danger" onclick="removeRow('o-${fid}','tr-${fid}',${tarQty})"><span class="fa fa-trash"></span></a></td></tr>`);
                            $('#' + fid).css("background-color", "#FF0000");
                            go2('#' + fid);
                            $('#' + fid).css("background-color", "inherit");
                        }
                        else {
                            //put new record table
                            $('#selected-table > tbody:last').append(`<tr id="tr-${fid}"><td class="whl-code">${fid}</td><td>${fName}</td><td class="qty" id="${fid}">${input}</td><td> <a class="btn btn-sm btn-outline-danger" onclick="removeRow('o-${fid}','tr-${fid}',${input})"><span class="fa fa-trash"></span></a></td></tr>`);
                            go2('#selected-table > tbody tr:last');
                        }
                    }
                }
            }
        });

        $('#confirm-end').click(function () {

            var progress = $('#upload-progress');
            var rowCount = $('.modal-body #selected-table > tbody  > tr').length;
            eachRow = 100 / rowCount;
            var wid = 0;
            var mess = "";
            $('.modal-body #selected-table > tbody  > tr').each(function (index, tr) {

                var code = $(this).children('.whl-code').text().trim();
                var quantity = parseFloat($(this).children('.qty').text());
                var reqTime = $('#req-time').val();
                if (code == "" || isNaN(quantity) || reqTime.isNaN) {
                    Swal.fire({
                        position: 'center',
                        icon: 'error',
                        title: 'Please check your data',
                        showConfirmButton: true
                    });
                    setTimeout(function () {
                        window.location.reload();
                    }, 1000);
                } else {

                    var routeURL = location.protocol + "//" + location.host;
                    var record = { whcd: code, qty: quantity, id: @Html.Raw(ViewBag.ptid), reqTime };
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: routeURL + '/api/Allocate/ConfirmJsAllocate',
                        data: JSON.stringify(record),
                        onBegin: $('#confirm-end').html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>Loading...'),
                        success: function (data) {
                            mess = data.message;
                        },
                        failure: function (response) {
                            alert(response);
                        }

                    });

                    setTimeout(function () {
                        wid += eachRow;
                        progress.width(wid)
                    }, 100);
                }



            });

            Swal.fire({
                position: 'center',
                icon: 'success',
                title: 'Your work has been saved',
                showConfirmButton: false,
                timer: 2000
            });
            setTimeout(function () {
                window.location.reload();
            }, 1000);


        });
    });

</script>




<!-- Modal -->
<div class="modal fade modal-dialog-scrollable" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <h3 class="modal-title" id="exampleModalLabel">Confirm allocate order</h3>
                <hr />
                <div id="update-modal"></div>
                <div id="end-inv">
                    <p align="center"><i><b>End of orders</b></i></p>
                </div>
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" id="upload-progress" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="confirm-end" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade modal-dialog-scrollable" id="history-modal" tabindex="-1" aria-labelledby="history-modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-body">
                <h3 class="modal-title" id="history-modalLabel">Allocate history</h3>
                <hr />
                <table class="table table-striped" id="table1">
                    <thead>
                        <tr>
                            <th>
                                Item No.
                            </th>
                            <th>
                                Quantity
                            </th>
                            <th>
                                From
                            </th>
                            <th>
                                To
                            </th>
                            <th>
                                Status
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewBag.History)
                        {
                            <tr>
                                <td>
                                    @item.Item
                                </td>
                                <td>
                                    @item.AlcQty
                                </td>
                                <td>
                                    @item.AlcFrom
                                </td>
                                <td>
                                    @item.AlcTo
                                </td>
                                <td>
                                    @if (item.IsClosed == null)
                                    {
                                        <p class="badge bg-gradient-faded-warning">Pending</p>
                                    }
                                    else if (item.IsClosed == true)
                                    {


                                        <p class="badge bg-success">Order posted</p>
                                    }
                                    else
                                    {
                                        <p class="badge bg-danger">Declined</p>
                                    }
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
