@model IEnumerable<NMVS.Models.ViewModels.AllocateRequestVm>

@{
    ViewData["Title"] = "Allocate request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <!-- Card header -->
            <div class="card-header">
                <h3 class="mb-0">@ViewData["Title"]</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive col-12">
                    <table class="table table-bordered table-condensed" id="datatable-search" width="100%">
                        <thead class="thead-light">
                            <tr>
                                <th>
                                    No.
                                </th>

                                <th>
                                    Item No.
                                </th>
                                <th>
                                    Quantity
                                </th>
                                <th>
                                    Reported
                                </th>
                                <th>
                                    From
                                </th>
                                <th>
                                    To
                                </th>
                                <th>
                                    Time
                                </th>

                                <th>
                                    Quick Action
                                </th>
                                <th>
                                    Report
                                </th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {

                                <tr id="confirm-@item.AlcId">
                                    <td>
                                        @item.AlcId
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Item)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AlcQty)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Reported)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AlcFrom)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AlcTo)
                                    </td>
                                    <td>
                                        @item.MovementTime
                                    </td>
                                    <td class="post-btn">
                                        <div>
                                            @if (item.IsClosed == null)
                                            {

                                                <div class="p-2">
                                                    <span class="btn btn-outline-primary" id="post-@item.AlcId" onclick="postOrder(@item.AlcId, 'post-@item.AlcId');">Post order</span>
                                                    <span class="btn btn-outline-danger" id="decline-@item.AlcId" onclick="declineRequest(@item.AlcId, 'decline-@item.AlcId');">Decline</span>

                                                </div>
                                            }
                                            else if (item.IsClosed == true)
                                            {


                                                <p class="badge bg-success">Order posted</p>
                                            }
                                            else
                                            {
                                                <p class="badge bg-danger">Declined</p>
                                            }



                                        </div>
                                    </td>
                                    <td style="white-space: normal;">
                                        @{
                                            if (!string.IsNullOrEmpty(item.Note))
                                            {
                                                var notes = item.Note.Split("**");
                                                foreach (var note in notes)
                                                {
                                                    if (note.Trim() != "")
                                                    {
                                                        <span>@note</span> <br />
                                                    }
                                                }
                                            }
                                        }


                                    </td>


                                </tr>
                            }
                        </tbody>
                        <tfoot></tfoot>
                    </table>
                </div>
            </div>
            <div class="card-footer">

                <div class="row col-12">
                    <span class="col-auto">
                        <a asp-action="NewRequest" class="btn btn-sm btn-outline-info">
                            New allocate request
                        </a>
                    </span>

                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/assets/js/sweetalert/sweetalert2.all.min.js"></script>
<script src="~/assets/js/notify.js"></script>
<script src="~/assets/datatable/datatables.min.js"></script>
<script>
    var routeURL = location.protocol + "//" + location.host;
    function postOrder(rqId, ts) {

        var rq = parseInt(rqId);
        var postData = {
            AlcId: rq
        };

        Swal.fire({
            title: 'Is all information correct?',
            showDenyButton: true,
            confirmButtonText: 'Save',
            denyButtonText: `Don't save`,
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax(
                    {
                        url: routeURL + "/api/Allocate/PostOrder",
                        data: JSON.stringify(postData),
                        contentType: 'application/json',
                        type: "POST",
                        success: function (common) {

                            if (common.status == 1) {
                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'Order posted',
                                    showConfirmButton: false,
                                    timer: 1000
                                });
                                $('#' + ts).closest('.p-2').html('<p class="badge bg-success">Order posted</p>');
                            } else {
                                Swal.fire({
                                    position: 'center',
                                    icon: 'error',
                                    title: common.message,
                                    showConfirmButton: true,
                                });
                            }
                        }

                    }
                );
            } else {

            }
        });





    }

    function declineRequest(rqId, ts) {

        var rq = parseInt(rqId);
        var postData = {
            AlcId: rq
        };

        Swal.fire({
            title: 'Are your sure to <b class="text-danger">decline</b> this request?',
            showDenyButton: true,
            confirmButtonText: 'Save',
            denyButtonText: `Don't save`,
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax(
                    {
                        url: routeURL + "/api/Allocate/DeclineRequest",
                        data: JSON.stringify(postData),
                        contentType: 'application/json',
                        type: "POST",
                        success: function (common) {

                            if (common.status == 1) {
                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'Request declined!',
                                    showConfirmButton: false,
                                    timer: 1000
                                });
                                $('#' + ts).closest('.p-2').html('<p class="badge bg-danger">Declined</p>');
                            } else {
                                $.notify(common.message);
                            }
                        }

                    }
                );
            } else {

            }
        });




    }

    $(document).ready(function () {
        $('.nav-allocate').addClass('active');
        $('.nav-add-alc').addClass('active');
        $('#navAllocate').addClass('show');
        $('#new-sup').click(function () {
            $('#file-modal').modal('toggle');
        });
        $('#datatable-search').DataTable({
            "order": [[0, "desc"]]
        });

    });
</script>