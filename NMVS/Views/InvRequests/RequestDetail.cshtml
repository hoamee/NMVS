@model NMVS.Models.ViewModels.RequestDetailVm

@{
    ViewData["Title"] = "Request: " + Model.Rq.Id;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var correctIssued = Model.Dets.Sum(x => x.Arranged - x.Quantity) == 0;
}

<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <!-- Card header -->
            <div class="card-header">
                <h3 class="mb-0">@ViewData["Title"]</h3>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-2">
                        Request No.
                    </dt>

                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Rq.Id)
                    </dd>

                    <dt class="col-sm-2">
                        Request type
                    </dt>

                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Rq.RqType)
                    </dd>

                    <dt class="col-sm-2">
                        Ref
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Rq.Ref)
                    </dd>

                    <dt class="col-sm-2">
                        Date
                    </dt>

                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Rq.Date)
                    </dd>

                    <dt class="col-sm-2">
                        Created By
                    </dt>

                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Rq.RqBy)
                    </dd>



                    @if (Model.Rq.RqType != "MFG")
                    {
                        <dt class="col-sm-2">
                            SO confirmation
                        </dt>

                        <dd class="col-sm-10">
                            @if (Model.Rq.SoConfirm == true)
                            {


                                <span class="badge bg-success"> Confirmed </span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Not Yet</span>
                            }
                        </dd>
                    }

                    <dt class="col-sm-2">
                        Request confirmation
                    </dt>

                    <dd class="col-sm-10">
                        @if (Model.Rq.Confirmed == true)
                        {
                            <span class="badge bg-success"> Confirmed </span> <span> By @Model.Rq.ConfirmedBy </span>
                        }
                        else if (Model.Rq.Confirmed == null)
                        {
                            <span class="badge bg-secondary">Not Yet</span>
                        }
                        else
                        {
                            <span class="badge bg-danger"> Rejected </span> <span> By @Model.Rq.ConfirmedBy: @Model.Rq.ConfirmationNote </span>
                        }
                    </dd>

                </dl>
            </div>
            <div class="card-footer">
                @if (Model.Rq.RqType == "MFG" && Model.Rq.SoConfirm != true)
                {
                    <a asp-action="UpdateList" class="btn btn-outline-warning" asp-route-id="@Model.Rq.Id">Update</a>
                }

                <a asp-action="History" class="btn btn-outline-secondary">History</a>
                @if (Model.Rq.SoConfirm == true && Model.Rq.Confirmed != true && User.IsInRole("Handle request"))
                {
                    <span class="btn btn-outline-success" onclick="confirmRequest(true)">Confirm</span>
                    <span class="btn btn-outline-danger" onclick="confirmRequest(false)">Reject</span>
                }


            </div>
        </div>
    </div>
</div>


<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <!-- Card header -->
            <div class="card-header">
                <h3 class="mb-0">Items</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-flush" id="datatable-search">
                        <thead>
                            <tr>
                                <th>

                                </th>
                                <th>
                                    Item No
                                </th>
                                <th>
                                    Item Description
                                </th>

                                <th>
                                    Spec date
                                </th>
                                <th>
                                    Requested quantity
                                </th>
                                <th>
                                    Selected
                                </th>
                                <th>
                                    Arranged
                                </th>
                                <th>
                                    Movement note
                                </th>
                                <th>
                                    Required Date
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.Dets)
                            {

                                <tr>
                                    <td>
                                        @if (Model.Rq.SoConfirm == true && Model.Rq.Confirmed == true && User.IsInRole("Handle request"))
                                        {
                                            if (item.Quantity > item.Picked)
                                            {
                                                @if (Model.Rq.RqType == "MFG")
                                                {
                                                    <a class="btn btn-outline-info" href="/InvRequests/PickListMFG/?id=@item.DetId">Picking list</a>
                                                }

                                                else
                                                {
                                                    <a class="btn btn-outline-info" href="/InvRequests/PickListSO/?id=@item.DetId">Picking list</a>

                                                }
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">Picked</span>
                                            }
                                        }
                                        else
                                        {
                                            @if (Model.Rq.RqType == "MFG" && Model.Rq.SoConfirm == false)
                                            {
                                                <a class="btn btn-outline-info btn-sm" href="/InvRequests/UpdateDet/@item.DetId">Edit</a>
                                            }


                                        }

                                    </td>
                                    <td>
                                        @item.ItemNo
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.SpecDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.Quantity)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.Picked)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.Arranged)
                                    </td>
                                    <td class="text-danger">
                                        @if (item.Picked > 0)
                                        {
                                            @if (!string.IsNullOrEmpty(item.MovementNote))
                                            {
                                                <a href="/Inquiry/MovementReport/@Model.Rq.Id" class="btn btn-outline-danger btn-sm">Movement report</a>
                                            }
                                            else
                                            {
                                                <a href="/Inquiry/MovementReport/@Model.Rq.Id" class="btn btn-outline-info btn-sm">Movement report</a>
                                            }
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.RequireDate)
                                    </td>

                                </tr>

                            }


                        </tbody>
                        <tfoot>
                            @if (Model.Rq.RqType == "MFG" && Model.Rq.SoConfirm != true)
                            {
                                <tr>
                                    <td colspan="9" class="text-center col-6">
                                        <a class="btn btn-outline-primary" href="/InvRequests/RequestDetCreate/@Model.Rq.Id">
                                            <span><i class="bi bi-plus-circle"></i></span>
                                            <span>
                                                Add item
                                            </span>
                                        </a>

                                        <div class="btn btn-outline-success" onclick="submitRequest()">
                                            <span><i class="fa fa-check" style="color: green"></i></span>
                                            <span>
                                                Close
                                            </span>
                                        </div>

                                    </td>
                                </tr>
                            }
                        </tfoot>
                    </table>

                </div>
            </div>



        </div>
    </div>
</div>
<script src="~/assets/js/sweetalert/sweetalert2.all.min.js"></script>
<script>

    var routeURL = location.protocol + "//" + location.host;

    function submitRequest() {
        Swal.fire({
                title: 'Is all information correct?',
                showDenyButton: true,
                confirmButtonText: 'Yes, submit',
                denyButtonText: `No`,
                showLoaderOnConfirm: true,
                preConfirm: () => {
                    var rowCount = $('#datatable-search > tbody  > tr').length;
                    if (rowCount <= 0) {
                        return "err";
                    }
                    return true;


                },
                allowOutsideClick: () => !Swal.isLoading()

            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.value == true) {

                    ajaxSubmitRequest(true);

                }
                if (result.value == "err") {
                    Swal.fire({
                        title: 'There is no data in request list, are you sure want to remove this request?',
                        showDenyButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Yes',
                        denyButtonText: `No`,
                    }).then((t) => {

                        if (t.isConfirmed) {
                            ajaxSubmitRequest(false);
                        } else {
                            Swal.fire('Changes are not saved', '', 'info')
                        }
                    })
                }
            })

    }

    function finhishedRequest() {
        Swal.fire({
            title: 'Is all the information correct?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: 'Yes, close this case',
            denyButtonText: `No`,

        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {

                var shpr = {
                    whcd: '@Html.Raw(Model.Rq.Id)'
                };
                var postData = JSON.stringify(shpr);
                $.ajax({
                    url: routeURL + '/api/InvRequest/FinhishedRequest',
                    method: "POST",
                    contentType: "application/json; charset=utf8",
                    data: postData,
                    success: function (dt) {
                        if (dt.status == 1) {
                            Swal.fire('Report sent!', '', 'success')
                                .then((r) => {
                                    if (r.isConfirmed) {
                                        window.location.reload();
                                    }
                                });
                        } else {

                            Swal.fire('An error occurred', '', 'error')
                        }

                    }

                });

            } else if (result.isDenied) {
                Swal.fire('Changes are not saved', '', 'info')
            }
        });
    }

    function reportRequest() {
        Swal.fire({
            title: 'By report this request, you can no longer process this, until the requester response. Are you sure?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: 'Yes, send report',
            denyButtonText: `No`,
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off',
                placeholder: 'Add some note'
            },
            showLoaderOnConfirm: true,
            preConfirm: (dt) => {

                if (dt.trim() == "") {
                    Swal.showValidationMessage(
                        `Please add some note`
                    )
                }

                return { valid: true, mess: dt };


            },
            allowOutsideClick: () => !Swal.isLoading()

        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.value.valid == true) {

                var shpr = {
                    whcd: '@Html.Raw(Model.Rq.Id)',
                    loc: result.value.mess
                };
                var postData = JSON.stringify(shpr);
                $.ajax({
                    url: routeURL + '/api/InvRequest/ReportRequest',
                    method: "POST",
                    contentType: "application/json; charset=utf8",
                    data: postData,
                    success: function (dt) {
                        if (dt.status == 1) {
                            Swal.fire('Report sent!', '', 'success')
                                .then((r) => {
                                    if (r.isConfirmed) {
                                        window.location.reload();
                                    }
                                });
                        } else {

                            Swal.fire('An error occurred', '', 'error')
                        }

                    }

                });

            } else if (result.isDenied) {
                Swal.fire('Changes are not saved', '', 'info')
            }
        });
    }

    function confirmRequest(accept) {
        Swal.fire({
            title: 'Do you want to save the changes?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: 'Save',
            denyButtonText: `Don't save`,
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off',
                placeholder: 'Add some note'
            },
            showLoaderOnConfirm: true,
            preConfirm: (dt) => {
                if (!accept) {
                    if (dt.trim() == "") {
                        Swal.showValidationMessage(
                            `Please add some note`
                        )
                    }
                }
                return { valid: true, mess: dt };


            },
            allowOutsideClick: () => !Swal.isLoading()

        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.value.valid == true) {

                var shpr;
                if (accept) {
                    shpr = {
                        whcd: '@Html.Raw(Model.Rq.Id)',
                        accepted: accept
                    };
                } else {
                    shpr = {
                        whcd: '@Html.Raw(Model.Rq.Id)',
                        accepted: accept,
                        loc: result.value.mess
                    };
                }
                var postData = JSON.stringify(shpr);
                $.ajax({
                    url: routeURL + '/api/InvRequest/ConfirmRequest',
                    method: "POST",
                    contentType: "application/json; charset=utf8",
                    data: postData,
                    success: function (dt) {
                        if (dt.status == 1) {
                            Swal.fire('Saved!', '', 'success')
                                .then((r) => {
                                    if (r.isConfirmed) {
                                        window.location.reload();
                                    }
                                });
                        } else {

                            Swal.fire('An error occurred', '', 'error')
                        }

                    }

                });

            } else if (result.isDenied) {
                Swal.fire('Changes are not saved', '', 'info')
            }
        });

    }

    function ajaxSubmitRequest(del) {
        var shpr = {
                            whcd: '@Html.Raw(Model.Rq.Id)',
                            qty: 0,
                            id: 0,
                            shipper: 0,
                            det: 0
                        };
                        var postData = JSON.stringify(shpr);
                        $.ajax({
                            url: routeURL + '/api/InvRequest/CloseRequest',
                            method: "POST",
                            contentType: "application/json; charset=utf8",
                            data: postData,
                            success: function (dt) {
                                if (dt.status == 1) {
                                    Swal.fire('Saved!', '', 'success')
                                        .then((result) => {
                                            if (result.isConfirmed) {
                                                if (del) {
                                                    window.location.reload();
                                                }
                                                else {
                                                    window.location.href = "/InvRequests/History";
                                                }
                                            }
                                        });
                                } else {
                                    Swal.fire('An error occurred', '', 'error')
                                }

                            }

                        });
    }

    $(document).ready(function () {
        $('.nav-request').addClass('active');
        $('.nav-rq-his').addClass('active');
        $('#navRequest').addClass('show');



    });


</script>